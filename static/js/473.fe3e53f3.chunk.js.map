{"version":3,"file":"static/js/473.fe3e53f3.chunk.js","mappings":"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","sources":["components/error/index.js","components/tabs/LazyComponent2.js","../node_modules/@mui/material/Typography/typographyClasses.js","../node_modules/@mui/material/Typography/Typography.js"],"sourcesContent":["import { Typography } from \"@mui/material\";\nimport React from \"react\";\n\nexport const ErrorMessage = ({ message }) => (\n  <Typography variant=\"h5\" sx={{ color: \"red\" }}>\n    {message}\n  </Typography>\n);\n","import { Box } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { ErrorMessage } from \"../error\";\nimport { Loading } from \"../loading\";\n\nexport const LazyComponent2 = ({ path }) => {\n  const [Component, setComponent] = useState(<Loading />);\n\n  useEffect(() => {\n    function load() {\n      const c = import(`${path}`);\n\n      c.then((module) => {\n        const C = module.default;\n        setComponent(<C />);\n      }).catch((error) => {\n        setComponent(<ErrorMessage message={error.message} />);\n      });\n    }\n    load();\n  }, [path]);\n\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" m={10}>\n      {Component}\n    </Box>\n  )\n};","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant === 'inherit' && {\n  // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.\n  font: 'inherit'\n}, ownerState.variant !== 'inherit' && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n};\n\n// TODO v6: deprecate these color values in v5.x and remove the transformation in v6\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n  const {\n      align = 'inherit',\n      className,\n      component,\n      gutterBottom = false,\n      noWrap = false,\n      paragraph = false,\n      variant = 'body1',\n      variantMapping = defaultVariantMapping\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes /* @typescript-to-proptypes-ignore */.object\n} : void 0;\nexport default Typography;"],"names":["ErrorMessage","_ref","message","_jsx","Typography","variant","sx","color","children","LazyComponent2","path","_useState","useState","Loading","_useState2","_slicedToArray","Component","setComponent","useEffect","concat","then","module","C","default","catch","error","Box","display","justifyContent","m","getTypographyUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TypographyRoot","styled","name","overridesResolver","props","styles","ownerState","root","align","capitalize","noWrap","gutterBottom","paragraph","theme","_extends","margin","font","typography","textAlign","overflow","textOverflow","whiteSpace","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","React","inProps","ref","themeProps","useThemeProps","transformDeprecatedColors","extendSxProp","_props$align","className","component","_props$gutterBottom","_props$noWrap","_props$paragraph","_props$variant","_props$variantMapping","variantMapping","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","as","clsx"],"sourceRoot":""}